{
  "filters": {
    "min_liquidity": 5000,
    "min_volume": 10000,
    "pump_threshold": 100,
    "dump_threshold": -50,
    "bundled_supply_threshold": 10
  },
  "blacklist": {
    "coins": ["SCAMCOIN", "RUGTOKEN"],
    "dev_wallets": ["0x123abc...", "0xdeadbeef..."]
  },
  "fake_volume": {
    "use_pocket_universe": true,
    "pocket_universe_api_key": "your_api_key"
  },
  "rugcheck": {
    "use_rugcheck": true,
    "rugcheck_api_key": "your_rugcheck_api_key"
  },
  "trading": {
    "use_bonkbot": true,
    "telegram_bonkbot_token": "your_bonkbot_api_key",
    "max_trade_amount": 1000,
    "take_profit_percentage": 50,
    "stop_loss_percentage": 20
  },
  "telegram": {
    "bot_token": "7647870499:AAHzJDGSLHQNBPZYN0anD7UT3fz6XLTm3ZE",
    "chat_id": "6078534736"
  },
  "update_interval": 600
}

from telegram import Bot

# Load Configuration
with open("config.json", "r") as f:
    CONFIG = json.load(f)

TG_BOT_TOKEN = CONFIG["telegram"]["7647870499:AAHzJDGSLHQNBPZYN0anD7UT3fz6XLTm3ZE"]
TG_CHAT_ID = CONFIG["telegram"]["6078534736"]

# Initialize Telegram Bot
tg_bot = Bot(token=TG_BOT_TOKEN)

def send_test_message():
    """Send a test message to verify Telegram bot connection."""
    try:
        tg_bot.send_message(chat_id=TG_CHAT_ID, text="üöÄ Test message: Your bot is successfully connected to Telegram!")
        print("‚úÖ Test message sent successfully!")
    except Exception as e:
        print(f"‚ùå Error sending message: {e}")

if __name__ == "__main__":
    send_test_message()

